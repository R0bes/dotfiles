
(defwidget date_side [] 
  (box :orientation "v" :space-evenly "false" 
    (box :class "number_day" {number_day})
    (box :class "month" {month})))

(defwidget weather_side [] 
  (box :orientation "h" :space-evenly "false" 
    (box :class "weather-icon-side" :style "color: ${weather-hex}" {weather-icon})
    (box :class "weather-info-side" :orientation "v" :space-evenly "false" 
      (box :class "temperature-side" "${temperature}  Ôãà")
      (box :class "weather-stat-side" {weather-stat}))))
      
(defwidget time_side [] 
  (box :orientation "v" :space-evenly "false" 
    (box :orientation "h" :class "time-side" :space-evenly "true" 
      (box :class "hour-side" {hour})
      (box :class "minute-side" {min}))
    (box :class "day-side" {day})))

(defwidget sys_side [] 
  (box :orientation "v" :space-evenly "false" 
    (button :class "search-side" :onclick "~/.config/eww/scripts/launcher.sh" "Ôê¢  Search...")
    (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true" 
      (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" :timeout "20s" "ÓßÄ")
      (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" :timeout "20s" "üíæ") ;;"ÓßÑ")
      (button :class "lock-side" :onclick "~/.config/eww/scripts/lockscreen.sh" :timeout "20s" "Ó¶è")
      (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" :timeout "20s" "Ó¶£")
      (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" :timeout "20s" "Ó¶ë"))))



(defwidget logout [] 
	(box :vexpand "false" :hexpand "false" 
		(button :class "sysbtn" :onclick "" "Ó¶ë")))
(defwidget sleep [] 
	(box :vexpand "false" :hexpand "false" 
		(button :class "sysbtn" :onclick "systemctl suspend" "Ó¶£")))
(defwidget reboot [] 
	(box :vexpand "false" :hexpand "false" 
		(button :class "sysbtn" :onclick "systemctl reboot" "ÓßÑ")))
(defwidget shutdown [] 
	(box :vexpand "false" :hexpand "false" 
		(button :class "sysbtn" :onclick "systemctl poweroff" "ÓßÄ")))



;; Music
(defwidget music [] 
	(box :corientation "h" :space-evenly "false" :vexpand "false" :hexpand "false" 
		(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
		(box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
			(label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
			(label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
			(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" 
				(button :class "btn_prev" :onclick "scripts/music_info --prev" "<")
				(button :class "btn_play" :onclick "scripts/music_info --toggle" STATUS)
				(button :class "btn_next" :onclick "scripts/music_info --next" ">"))
			(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" 
				(scale :onscroll "mpc -q seek +1" :min 0 :active "true" :max 100 :value CURRENT)))))



;; logout
(defwindow dash_logout 

  :monitor "HDMI-5"
  :geometry (geometry :x "50px" :y "50px" :width "150px" :height "150px")
		(logout))

;; sleep
(defwindow dash_sleep 
  :monitor "HDMI-5"
  :geometry (geometry :x "210px" :y "50px" :width "150px" :height "150px")
		(sleep))

;; reboot
(defwindow dash_reboot 
  :monitor "HDMI-5"
  :geometry (geometry :x "50px" :y "210px" :width "150px" :height "150px")
		(reboot))

;; shutdown
(defwindow dash_shutdown
  :monitor "HDMI-5"
  :geometry (geometry :x "210px" :y "210px" :width "150px" :height "150px")
		(shutdown))


;; music
(defwindow music 
  :monitor "HDMI-5"
	:geometry (geometry :x "300px" :y "200px" :width "450px" :height "250px")
		(music))

;; Sidebar stuff

;;üíæ üéµ 

(defwindow date_side 
  :monitor "HDMI-5"
	:geometry (geometry :x "10px" :y "45px" :width "80px" :height "80px")
	    (date_side))

(defwindow weather_side 
    :monitor "HDMI-5"
    :geometry (geometry :x "95px" :y "45px" :width "215px" :height "80px")
   		(weather_side))
                            
(defwindow time_side 
    :monitor "HDMI-5"
    :geometry (geometry :x "10px" :y "130px" :width "300px" :height "135px")
   		(time_side))

(defwindow sys_side 
    :monitor "HDMI-5"
    :geometry (geometry :x "10px" :y "607px" :width "300px" :height "153px")
   		(sys_side))

;;;; Vars

;; Music 
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)


;; Date
(defpoll number_day :interval "5h"  "date \"+%d\"")
(defpoll month :interval "10h"  "date \"+%b\"")
(defpoll min :interval "10s"  "date \"+%M\"")

;; Time
(defpoll hour :interval "10s"  "date \"+%H\"")
(defpoll day :interval "15h"  "date \"+%A\"")
(defpoll month_full :interval "15h"  "date \"+%B\"")
(defpoll year_full :interval "15h"  "date \"+%Y\"")

;; Weather
(defpoll weather-icon :interval "10m"  "cat /tmp/xmonad/weather/weather-icon")
(defpoll temperature :interval "10m"  "cat /tmp/xmonad/weather/weather-degree")
(defpoll weather-hex :interval "10m"  "cat /tmp/xmonad/weather/weather-hex")
(defpoll weather-stat :interval "10m"  "cat /tmp/xmonad/weather/weather-stat")
(defpoll weather-stat-side :interval "10m"  "~/.config/eww/scripts/weather-trimmer")

;;(defpoll weather-quote :interval "20m"  "~/.config/eww/scripts/getwethquote")
;;(defpoll weather-quote2 :interval "20m"  "~/.config/eww/scripts/getwethquote2")